# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on: push

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - name: Set up MySql
      uses: mirromutth/mysql-action@v1.1
      with:
            host port: 8081 # Optional, default value is 3306. The port of host
            container port: 8081 # Optional, default value is 3306. The port of container
            character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
            collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
            mysql version: "latest"
            mysql database: 'some_test' # Optional, default value is "test". The specified database which will be create
            mysql root password: quinn # Required if "mysql user" is empty, default is empty. The root superuser password
            mysql user: quinn # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
            mysql password: quinn # Required if "mysql user" exists. The password for the "mysql user"

    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Change wrapper permissions
      run: chmod +x ./gradlew
      
    - name: Build with Gradle
      continue-on-error: true
      run: ./gradlew build

    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

  test:
    runs-on: ubuntu-latest
    needs: build
    name: Run tests
    run: ./gradlew test
    continue-on-error: true
    
    
  sonar:
    needs: test
    - name: Cache SonarCloud packages
      continue-on-error: true
      uses: actions/cache@v1
      with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar

   - name: Build and analyze
      env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./gradlew build sonarqube --info

